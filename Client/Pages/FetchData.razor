@using Contacts.Shared
@inject HttpClient Http
@inject IContactsService ContactsService


<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>


<div class="modal fade show d-block" tabindex="-1" role="dialog">
    <div class="modal-backdrop fade show" @onclick="Cancel"></div>
    <div class="modal-dialog" style="z-index: 1050">
        <!-- Pop it above the backdrop -->
        <div class="modal-content ">
            <div class="modal-header">
                @if (showSuccessBanner)
                {
                    <div class="alert alert-success" role="alert">
                        Contact added successfully!
                    </div>
                }
                <h5 class="">Simple Calculator</h5>
                <button type="button" class="close" aria-label="Close" @onclick="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <EditForm Model="@contact">
                <div>
                    <label>First Name:</label>
                    <InputText @bind-Value="@contact.FirstName" />
                </div>
                <div>
                    <label>Last Name:</label>
                    <InputText @bind-Value="@contact.LastName" />
                </div>
                <div>
                    <label>Email:</label>
                    <InputText @bind-Value="@contact.Email" />
                </div>
                <div>
                    <label>Phone Number:</label>
                    <InputText @bind-Value="@contact.PhoneNumber" />
                </div>
                <div>
                    <label>House Number:</label>
                    <InputNumber @bind-Value="@contact.HouseNumber" />
                </div>
                <div>
                    <label>House Name:</label>
                    <InputText @bind-Value="@contact.HouseName" />
                </div>
                <div>
                    <label>Post Code:</label>
                    <InputText @bind-Value="@contact.PostCode" />
                </div>



            <div class="modal-footer">
                @if (isEdit)
                {
                    <button class="btn btn-primary" @onclick="Edit" type="submit">Edit</button>
                }
                else
                {
                    <button class="btn btn-primary" @onclick="HandleSubmit" type="submit">Create</button>
                }
                <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
            </div>
            </EditForm>
        </div>
    </div>
</div>


@code {

    [Parameter] public ContactsModel contact { get; set; }
    [Parameter] public bool isEdit { get; set; }

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private async Task Close() => await BlazoredModal.CloseAsync(ModalResult.Ok(true));
    private async Task Cancel() => await BlazoredModal.CancelAsync();

    private bool showSuccessBanner = false;


    protected override async Task OnInitializedAsync()
    {
        showSuccessBanner = false;
    }

    private void HandleSubmit()
    {
        ContactsService.AddContactAsync(contact);
        showSuccessBanner = true;
    }

    private void Edit()
    {
        ContactsService.EditContactASync(contact);
        showSuccessBanner = true;
    }
}
